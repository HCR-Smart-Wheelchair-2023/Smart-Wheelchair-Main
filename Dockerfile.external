FROM personalroboticsimperial/prl:ub2004-noetic-openCV420wContrib
# If you have a GPU with an architecture up to Turing (not included), use this to enable CUDA with OpenCV
# FROM personalroboticsimperial/prl:ub2004-noetic-cu101-openCV420
SHELL ["/bin/bash", "-c"]


RUN apt update && DEBIAN_FRONTEND=noninteractive apt install -y \
    python3-catkin-tools \
    ros-noetic-rtabmap ros-noetic-rtabmap-ros \
    ros-noetic-libg2o \
    git && \
    apt remove -y ros-noetic-rtabmap ros-noetic-rtabmap-ros

RUN DEBIAN_FRONTEND=noninteractive apt-get update -y  && \
    DEBIAN_FRONTEND=noninteractive apt install -y \
        software-properties-common \
        ros-noetic-joy \
        ros-noetic-teleop-twist-joy \
        ros-noetic-octomap && \
    DEBIAN_FRONTEND=noninteractive add-apt-repository ppa:borglab/gtsam-release-4.0 && \
    DEBIAN_FRONTEND=noninteractive apt update && \
    DEBIAN_FRONTEND=noninteractive apt install -y libgtsam-dev libgtsam-unstable-dev

WORKDIR /rtabmap
RUN git clone https://github.com/introlab/rtabmap.git
RUN cd rtabmap/build  && \
    cmake .. && \
    make -j24 && \
    make install

WORKDIR /root/ros_ws/src
RUN git clone https://github.com/introlab/rtabmap_ros.git

RUN source /opt/ros/noetic/setup.bash && cd .. && catkin config --cmake-args -DRTABMAP_SYNC_MULTI_RGBD=ON

RUN source /opt/ros/noetic/setup.bash && catkin build rtabmap_ros


# COPY arnie_main arnie_main/
# COPY arnie_description arnie_description/
# COPY arnie_localisation arnie_localisation/

COPY arnie_navigation src/arnie_navigation/
COPY arnie_localisation src/arnie_localisation/
COPY arnie_main src/arnie_main/
COPY arnie_description src/arnie_description/

RUN cd .. && source /opt/ros/noetic/setup.bash && catkin init && catkin build

CMD source ../devel/setup.bash && roscore
# CMD source ../devel/setup.bash && roslaunch arnie_main main_external.launch --screen
