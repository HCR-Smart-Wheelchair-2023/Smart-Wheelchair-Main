<?xml version="1.0"?>
<launch>


    <!-- Can be equal to sim or robot -->
    <arg name="mode" default="$(optenv MODE sim)" />

    <!-- Set up the tf transforms -->
    <!-- x y z (m) yaw pitch roll (radians) -->
    <!-- <node pkg="tf" type="static_transform_publisher" name="zed_link" args="0 0 1 0 0 0
    base_link zed_link 100" /> -->

    <!-- <node pkg="tf" type="static_transform_publisher" name="odom" args="0 0 0 0 0 0 map odom
    100"/> -->
    <!-- <node pkg="tf" type="static_transform_publisher" name="camera_link"
    args="0 0 0 1.57 3.14 1.57 base_link camera_link 100" /> -->


    <group if="$(eval arg('mode') == 'sim')">
        <node pkg="tf" type="static_transform_publisher" name="odom" args="0 0 0 0 0 0 map odom 100" />
        <node pkg="tf" type="static_transform_publisher" name="camera_link"
            args="0 0 0 1.57 3.14 1.57 base_link camera_link 100" />
    </group>
    <group if="$(eval arg('mode') == 'robot')">
        <node pkg="tf" type="static_transform_publisher" name="odom" args="1 3 0 0 0 0 map odom 100" />
        <node pkg="tf" type="static_transform_publisher" name="camera_link"
            args="0 1 0 0 0 0 base_link camera_link 100" />
    </group>
    <!-- Should be configured differently for the jetson that for the  -->
    <include file="$(find path_planning)/launch/odom.launch">
    </include>
    <include file="$(find path_planning)/launch/point_cloud_transform.launch" />


    <!-- unless="$(arg sim)" -->

    <!-- Start the map server -->
    <include file="$(find path_planning)/launch/path_planning.launch">
    </include>

    <!-- ACML -->

    <!-- <node pkg="amcl" type="amcl" name="amcl" output="screen">
        <remap from="scan" to="scan" />
        <param name="odom_frame_id" value="odom" />
        <param name="odom_model_type" value="diff-corrected" />
        <param name="base_frame_id" value="base_link" />
        <param name="update_min_d" value="0.1" />
        <param name="update_min_a" value="0.2" />
        <param name="min_particles" value="100000000" />
        <param name="global_frame_id" value="map" />
        <param name="tf_broadcast" value="true" />
        <param name="initial_pose_x" value="2.5" />
        <param name="initial_pose_y" value="3" />
        <param name="initial_pose_a" value="1.57" />
    </node> -->

    <!-- Start Rviz -->
    <node pkg="rviz" type="rviz" name="rviz" args="-d $(find robot_main)/rviz/config.rviz" />
    <node pkg="rqt_tf_tree" type="rqt_tf_tree" name="rqt_tf_tree" />

    <!-- /zed/zed_node/point_cloud/cloud_registered, -->
    <group if="$(eval arg('mode') == 'robot')">
        <!-- Listen to the /cmd_vel topic and send the commands to the PI -->
        <include file="$(find navigation)/launch/pi_interface.launch">

        </include>

        <!-- <include file="$(find user_interface)/launch/user_interface.launch">

        </include> -->
    </group>

    <group if="$(eval arg('mode') == 'sim')">
        <!-- TODO send commands to the simulation model -->
        <!-- Open gazebo server, with model and subscribes to topics and stuff -->
        <include file="$(find wheele_gazebo)/launch/wheele.launch"></include>

    </group>

    <!-- <node pkg="nodelet" type="nodelet" name="external_nodelet_manager" args="manager"
    output="screen"/> -->

</launch>
